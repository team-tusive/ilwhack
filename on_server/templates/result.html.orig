<html>
   <head>
      <link rel="stylesheet" type="text/css" href="/css/stylesheet.css">
      <script type="text/javascript" src="js/jquery-1.9.1.min.js"></script>
      <script type="text/javascript" src="http://maps.google.com/maps/api/js?libraries=geometry,visualization&sensor=false"></script>
      <script src="http://www.google.com/jsapi?key=ABQIAAAAvpzZIJ6aE1PP3WOYtmjZ3BTq7sWfP_v_VCssE0RxAm52ohNf_RRHW8r2VF3Z1ijKTltH6UdcIQaiAw" type="text/javascript"></script>
      <script type="text/javascript">

         var directionDisplay;
         var directionsRenderer;
         var directionsService = new google.maps.DirectionsService();
         var first = true;
         var map, pointarray, heatmap;
         var heatmapData = []


         function initHeatmap() {
                var xhr = new XMLHttpRequest();
                xhr.open("GET", "api?hour=all", false);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        heatmapDataRaw = JSON.parse(xhr.responseText);
                        for (crime in heatmapDataRaw) {
                            heatmapData.push(new google.maps.LatLng(parseFloat(heatmapDataRaw[crime].lat), parseFloat(heatmapDataRaw[crime].lon)))
                        }
                    }
                }
                xhr.send();
            pointArray = new google.maps.MVCArray(heatmapData); //heatmapData from heatmap_data_filtered.js

            heatmap = new google.maps.visualization.HeatmapLayer({ data: pointArray });

            heatmap.setMap(map);
            heatmap.setOptions({dissipating: true});
            heatmap.setOptions({radius: 30});
            heatmap.setOptions({maxIntensity: 10});
         }

         function drawMap() {

            var start = new google.maps.LatLng("55.941125", "-3.205261");
            var myOptions = {
                              zoom:7,
                              mapTypeId: google.maps.MapTypeId.ROADMAP,
                              center: start,
                              mapTypeControl: false
                             }
            map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
         }

         function getRendererOptions() {

            var _colour = '#00458E';
            var _strokeWeight = 4;
            var _strokeOpacity = 1.0;
            var _suppressMarkers = false;
            var polylineOptions ={ strokeColor: _colour, strokeWeight: _strokeWeight, strokeOpacity: _strokeOpacity  };
            var rendererOptions = {draggable: false, suppressMarkers: _suppressMarkers, polylineOptions: polylineOptions};
            return rendererOptions;
         }

         function renderDirections(route, rendererOptions) {

            var color = first ? "#006600" : "#660000";
            first = false;
            var rideCoordinates = google.maps.geometry.encoding.decodePath(route.overview_polyline.points);
            var ridePath = new google.maps.Polyline({
                                                      map:            map,
                                                      path:           rideCoordinates,
                                                      strokeColor:    color,
                                                      strokeOpacity:  1.0,
                                                      strokeWeight:   4
                                                      });

            var ne = new google.maps.LatLng(route.bounds.northeast.lat, route.bounds.northeast.lng);
            var sw = new google.maps.LatLng(route.bounds.southwest.lat, route.bounds.southwest.lng);
            map.fitBounds(new google.maps.LatLngBounds(sw, ne));
         }


         function drawDirections(result) {

            var rendererOptions = getRendererOptions();
            for (route in result) {
               renderDirections(result[route], rendererOptions);
            }
         }

         function toggleHeatmap() {

            heatmap.setMap(heatmap.getMap() ? null : map);
         }

         function changeGradient() {
            var gradient = [
            'rgba(0, 255, 255, 0)',
            'rgba(0, 255, 255, 1)',
            'rgba(0, 191, 255, 1)',
            'rgba(0, 127, 255, 1)',
            'rgba(0, 63, 255, 1)',
            'rgba(0, 0, 255, 1)',
            'rgba(0, 0, 223, 1)',
            'rgba(0, 0, 191, 1)',
            'rgba(0, 0, 159, 1)',
            'rgba(0, 0, 127, 1)',
            'rgba(63, 0, 91, 1)',
            'rgba(127, 0, 63, 1)',
            'rgba(191, 0, 31, 1)',
            'rgba(255, 0, 0, 1)'
            ]
            heatmap.setOptions({
               gradient: heatmap.get('gradient') ? null : gradient
            });
         }

         function changeOpacity() {

            heatmap.setOptions({opacity: heatmap.get('opacity') ? null : 0.2});
         }
      </script>
   </head>
   <body onload="initHeatmap()">
      <div id="map_canvas" style="width: 640px; height: 300px"></div>
      <button onclick="toggleHeatmap()">Toggle Heatmap</button>
      <button onclick="changeGradient()">Change gradient</button>
      <button onclick="changeOpacity()">Change opacity</button>
      <script type="text/javascript">
         drawMap();
         result = {% autoescape off %}{{ result }}{% endautoescape %}
         drawDirections(result);
      </script>
<<<<<<< HEAD

      {% for distance_text, distance_value, start_address, end_address, streets, whatever in routes %}
=======
      <table>
         <tr>
            <td><img src="logo_mobile.png" alt="SaferRoute logo" /><br /><i>shown in green</i></td><td><h3>Fastest route</h3><i>shown in red</i>
         </tr>
         <tr>
      {% for distance_text, distance_value, start_address, end_address, streets in routes %}
         <td>
>>>>>>> 38f830b54d74153e8c2be17e9f49b55a0c7d8c76
         <p>Route from <b>{{ start_address }}</b> to <b>{{ end_address }}</b><br>
         Distance: {{ distance_text }}</p>
         <ul>
         {% for street, rating in streets%}

            <li>{{ street }} &mdash; {{ rating }}</li>

         {% endfor %}
         </ul>
      </td>
      {% endfor %}
   </tr>
</table>
   </body>
</html>
